{"version":3,"sources":["componenets/GroupPage/images/wormlong2.png","constants/routes.js","componenets/Firebase/context.js","componenets/Firebase/firebase.js","componenets/Firebase/index.js","componenets/Session/withAuthorization.js","componenets/PasswordReset.js","componenets/WelcomeMessage.js","componenets/SignIn.js","componenets/SignUp.js","componenets/SignOutButton.js","componenets/Home.js","componenets/CreateGroup.js","componenets/NavBar.js","componenets/PasswordChange.js","componenets/UserProfile.js","componenets/GroupPage/CurrentBook.js","componenets/GroupPage/AddBook.js","componenets/GroupPage/AddPost.js","componenets/GroupPage/ShowAllPosts.js","componenets/GroupPage/UpdateBenchmark.js","componenets/UserSearch.js","componenets/GroupPage/UserList.js","componenets/GroupPage/GroupNav.js","componenets/GroupPage/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","home","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","require","config","apiKey","process","REACT_APP_FIREBASE_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","app","currentUser","updatePassword","initializeApp","withAuthorization","condition","WithAuthorization","_React$Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","listener","onAuthStateChanged","authUser","history","push","compose","withRouter","inputStyle","width","height","initialState","error","PasswordResetFormBase","call","onSubmit","event","state","then","setState","objectSpread","Routes","catch","preventDefault","onChange","defineProperty","target","name","_this$state","isInvalid","className","message","style","type","placeholder","disabled","PasswordResetLink","Link","to","PasswordResetForm","about","fontSize","textAlign","WelcomeMessage","labelStyle","marginBottom","formStyle","display","marginLeft","marginRight","SignInFormBase","handleChange","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_this$state2","Form","FormGroup","Label","Input","Button","color","size","PasswordReset_PasswordResetLink","SignInForm","SignInLink","SignInPage","Row","Col","xs","SignUp_SignUpLink","componenets_WelcomeMessage","form","labelDescription","username","confirmPassword","firstname","lastname","redirectTo","emailValid","passwordValid","usernameValid","validMessage","SignUpFormBase","_ref","checkValidInput","axios","post","sent","status","abrupt","console","log","_x","validateForm","invalidInputs","invalidMessages","fieldName","validCheck","match","checkPassword","length","noSpacesInPassword","checkUsername","usernameLength","passwordOne","passwordTwo","map","i","id","SignUpForm","SignUpLink","SignUpPage","SignIn_SignInLink","textsize","onClick","cardStyle","border","borderRadius","overflow","textsize2","margin","cardImageStyle","paddingLeft","paddingRight","cardTitleStyle","cardBodyStyle","Home","grouplist","hasGroups","checkIfGroups","prevProps","groupID","Home_GroupCard","Home_NoGroup","NoGroup","GroupCard","_this2","getGroupData","dbResponse","get","concat","groupName","data","currentBook","currentBenchmark","all","getBookData","getPostData","spread","bookData","postData","bookTitle","title","bookImage","image","author","user","date","postDate","Date","sm","Card","CardBody","CardTitle","CardSubtitle","CardImg","src","alt","CardText","Home_PostAuthor","toLocaleString","PostAuthor","_this3","componentDidMount","getUsername","_callee2","_context2","local","react","HomeLink","Alert","withReactContent","Swal","groupDescription","formlabelStyle","forminputsize","CreateGroup","currentUserID","userID","fire","text","_id","htmlFor","for","CreateGroupLink","navStyle","padding","padding2","NavBar","Navbar","dark","expand","offset","Nav","navbar","NavItem","Home_HomeLink","CreateGroup_CreateGroupLink","componenets_SignOutButton","NavLink","href","initalState","passwordConfirm","PasswordChangeForm","shiftLeft","updateProfileStyle","profileDisplayStyle","initialUpdateState","initialProfileState","dbUsername","dbEmail","dbFirstname","dbLastname","isCurrentUser","UserProfile","checkCurrentUser","userIDFromURL","updatedProfile","getUserData","params","UserProfile_UpdateInformationForm","PasswordChange","UpdateInformationForm","_ref2","fieldSubmitted","request","put","_x2","usernameIsInvalid","emailIsInvalid","firstnameIsInvalid","lastnameIsInvalid","authors","progressBarStyle","position","CurrentBook","getCurrentBook","bookID","percentageComplete","totalBenchmark","_this$props","CurrentBook_ProgressBar","percentage","ProgressBar","CurrentBook_BarFiller","BarFiller","background","transition","colStyle","AddBookPage","bookSearch","searchableBook","trim","split","join","loading","bookArray","react_spinners","css","sizeUnit","book","AddBook_SingleBook","isAdmin","updatePage","SingleBook","getChapterCount","_ref3","input","showCancelButton","inputValidator","addBookToGroup","_callee3","chosenBook","_this3$props","_context3","addTotalBenchmark","_callee4","totalCount","_ref6","nextBenchmark","_context4","addCurrentBenchmark","_callee5","_context5","_this4","_this$props$book","pageCount","publishedDate","top","AddPost","userPost","getAllPosts","divider","backgroundRepeat","backgroundSize","backgroundImage","Worm","marginTop","buttonPosition","commentContainer","borderStyle","borderWidth","backgroundColor","postTitle","postStyle","postArray","ShowAllPosts","GroupPage_AddPost","ShowAllPosts_SinglePost","SinglePost","comment","_this$props$post","singleComment","ShowAllPosts_ShowComment","ShowAllPosts_AddComment","postID","ShowComment","commentDate","AddComment","_this5","UpdateBenchmark","handleCurrentSubmit","t0","handleTotalSubmit","_this$props2","currentIsInvalid","totalIsInvalid","UserSearch","userSearch","searchSelect","userArray","UserSearch_SingleUser","SingleUser","addUserToGroup","_this3$props$user","_this$props$user","UserList","userlist","UserList_SingleUser","ButtonStyle","GroupNav","align","outline","pastBook","previousBenchmark","showMainPage","updateBook","addUser","adminpanel","groupinfopanel","columnbackground","GroupPage","description","checkAdmin","filter","showPage","groupIDFromURL","GroupPage_GroupNav","GroupPage_CurrentBook","GroupPage_UserList","GroupPage_GroupInfo","GroupPage_ShowAllPosts","GroupPage_UpdateBenchmark","AddBook","componenets_UserSearch","GroupInfo","App","isSignedIn","BrowserRouter","componenets_NavBar","Route","exact","path","render","componenets_Home","SignIn","SignUp","PasswordReset","componenets_UserProfile","componenets_CreateGroup","componenets_GroupPage","ReactDOM","context","Provider","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f255770c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wormlong2.91f43df8.png\";","export const home = '/';\nexport const signup = '/signup';\nexport const signin = '/signin';\nexport const userProfile = '/userprofile';\nexport const passwordReset = '/passwordreset';\nexport const passwordChange = '/passwordchange';\nexport const createGroup = '/creategroup';\nexport const discussion = '/discussion';","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nrequire(`dotenv`).config();\n\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password)\n    };\n\n    doSignInWithEmailAndPassword = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password)\n    };\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => { return this.auth.sendPasswordResetEmail(email) };\n\n    doPasswordUpdate = password => {\n        const user = app.auth().currentUser;\n        return user.updatePassword(password);\n    };\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as Routes from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    if (!condition(authUser)) {\n                        this.props.history.push(Routes.signin);\n                    };\n                });\n        };\n\n        componentWillUnmount() {\n            this.listener();\n        };\n\n        render() {\n            return (\n                <Component {...this.props} />\n            );\n        }\n    }\n\n    return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\nimport { withAuthorization } from './Session';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\n\nconst PasswordResetPage = () => (\n    <div>\n        {/* TODO This totally doesn't work */}\n        <h3>Password Reset</h3>\n        <br />\n        <PasswordResetForm />\n    </div>\n);\n\nconst initialState = {\n    email: '',\n    error: null,\n};\n\nclass PasswordResetFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...initialState };\n    }\n\n    onSubmit = event => {\n        const { email } = this.state;\n\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(() => {\n                this.setState({ ...initialState });\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, error } = this.state;\n\n        const isInvalid = email === '';\n\n        return (\n            <form className='form-horizontal'\n                onSubmit={this.onSubmit}>\n                {error && <p>{error.message}</p>}\n                <div className='form-group'>\n                    <input\n                        className='form-input'\n                        style={inputStyle}\n                        name='email'\n                        value={this.state.email}\n                        onChange={this.onChange}\n                        type='text'\n                        placeholder='Email Address'\n                    />\n                </div>\n                <div className=\"form-group \">\n                    <div className=\"col-7\"></div>\n                    <button\n                        className=\"btn btn-primary col-1 col-mr-auto\"\n                        disabled={isInvalid}\n                        type=\"submit\">Reset Password</button>\n                </div>\n\n            </form>\n        );\n    }\n}\n\nconst PasswordResetLink = () => (\n    <p>\n        <Link to={Routes.passwordReset}><button className='btn btn-success'>Forgot Password?</button></Link>\n    </p>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(PasswordResetPage);\n\nconst PasswordResetForm = compose(withRouter, withFirebase)(PasswordResetFormBase);\n\nexport { PasswordResetForm, PasswordResetLink };","import React from 'react'\n\nconst about = {\n    fontSize: '17px',\n    textAlign: 'center',\n};\n\nconst WelcomeMessage = (props) => {\n    return (\n        <p style={about}>\n            <strong>Welcome to Bookworm!</strong>\n            <br></br>\n            We’re helping you create a community around the books you love and the ones you want to read. By joining us we help keep you engaged with reading. Join now, create a club, invite your friends, pick your favorite book and get reading!\n                <br></br> <br></br>\n            Bookworm helps you facilitate your bookclub ensuring everyone is on the same page and place where your club can talk about the book. Our clubs feature benchmark tracking and dialog between users through a familiar post and comment feature.\n                <br></br> <br></br>\n            We’re totally free, why not sign in and get reading?\n    </p>\n    )\n};\n\nexport default WelcomeMessage;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from './SignUp';\nimport { PasswordResetLink } from './PasswordReset'\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\nimport { Row, Col, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport WelcomeMessage from './WelcomeMessage';\n\nconst inputStyle = {\n    width: '75%',\n    height: '40px',\n    fontSize: '16px'\n};\n\nconst labelStyle = {\n    marginBottom: '0px',\n};\n\nconst formStyle = {\n    display: 'block',\n    marginLeft: '30px',\n    marginRight: 'auto',\n    fontSize: '20px'\n};\n\nconst initialState = {\n    email: '',\n    password: '',\n    error: null\n};\n\nconst SignInPage = () => (\n    < div style={formStyle} >\n        <Row>\n            <Col xs='1' />\n            <Col xs='5'>\n                <h3>SignIn</h3>\n                <SignInForm />\n                <SignUpLink />\n            </Col>\n            <Col xs='5'>\n                <WelcomeMessage />\n            </Col>\n            <Col xs='1' />\n        </Row>\n    </div>\n);\n\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(async () => {\n                this.setState({ ...initialState });\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n    }\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <div >\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label style={labelStyle} >\n                            Email:\n                        </Label>\n                        <Input\n                            style={inputStyle}\n                            type='text'\n                            name='email'\n                            placeholder='email'\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            Password:\n                        </Label>\n                        <Input\n                            style={inputStyle}\n                            placeholder='password'\n                            type='password'\n                            name='password'\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Button\n                            color='primary'\n                            size='lg'\n                            disabled={isInvalid}\n                            type='submit'>\n                            Login\n                        </Button>\n                    </FormGroup>\n                </Form>\n                <PasswordResetLink />\n            </div >\n        );\n    };\n};\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\nconst SignInLink = () => (\n    <p style={{ fontSize: '16px' }}>\n        Already have an account?\n        <Link to={Routes.signin}>\n            <Button color='success'\n                size='lg'>\n                Sign In\n            </Button>\n        </Link>\n    </p>\n);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInLink };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withFirebase } from './Firebase';\nimport { compose } from 'recompose';\nimport axios from 'axios';\nimport { Row, Col, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nimport * as Routes from '../constants/routes';\nimport { SignInLink } from './SignIn';\nimport WelcomeMessage from './WelcomeMessage';\n\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px',\n    fontSize: '16px'\n};\n\nconst labelStyle = {\n    marginBottom: '0px',\n    fontSize: '18px'\n};\n\nconst form = {\n    display: 'block',\n    marginLeft: '50px',\n    marginRight: 'auto',\n};\n\nconst labelDescription = {\n    fontSize: '14px'\n};\n\nconst initialState = {\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n    firstname: '',\n    lastname: '',\n    redirectTo: null,\n    error: null,\n    emailValid: false,\n    passwordValid: false,\n    usernameValid: false,\n    validMessage: []\n}\n\nconst SignUpPage = () => (\n    < div style={form} >\n        <Row>\n            <Col xs='1' />\n            <Col xs='5'>\n                <h3>SignUp</h3>\n                <SignUpForm />\n                <SignInLink />\n\n            </Col>\n            <Col xs='5'>\n                <WelcomeMessage />\n            </Col>\n            <Col xs='1' />\n        </Row>\n    </div>\n);\n\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState };\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        //Checks if all the input fields are valid\n        //If not the validation messages are shown and no user is sent to sign up\n        if (this.checkValidInput()) {\n            const { username, email, password, firstname, lastname } = this.state;\n\n            const dbResponse = await axios.post(`/api/newuser`, { username, email, firstname, lastname });\n\n            if (dbResponse.status === 200) {\n                return this.props.firebase\n                    .doCreateUserWithEmailAndPassword(email, password)\n                    .then(authUser => {\n                        //The User has been successfully authenticated, clear this component state and redirect them to the home page\n                        this.setState({ ...initialState });\n                        this.props.history.push(Routes.home);\n                    })\n                    .catch(error => {\n                        console.log(error)\n                        this.setState({ error });\n                    });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.emailValid) {\n            invalidInputs++;\n            invalidMessages.push(`Email entered is invalid`);\n        };\n        if (!this.state.usernameValid) {\n            invalidInputs++;\n            invalidMessages.push(`Please ensure username is at least 3 characters, no more than 16 and only contains letters, numbers, underscores and dashes`);\n        };\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\]\\\\.,;:\\s@']+(\\.[^<>()\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `password`:\n                let checkPassword = value.length >= 6;\n                let noSpacesInPassword = value.match(/^\\S*$/);\n                validCheck = checkPassword && noSpacesInPassword ? true : false;\n                this.setState({ passwordValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    render() {\n        const { username, email, passwordOne, passwordTwo, firstname, lastname, error, validMessage } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            firstname === '' ||\n            lastname === '' ||\n            username.length < 3 ||\n            passwordOne < 6;\n\n        return (\n            <div className='SignupForm'>\n                <br />\n                {/* If there's an error with signup then display the error */}\n                {error && <p>{error.message}</p>}\n\n                {/* This is for checking if any of the inputs were invalid */}\n                {validMessage && validMessage.map((message, i) => <p key={i}>{message}</p>)}\n\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            Email\n                        </Label>\n                        <Input\n                            style={inputStyle}\n                            type='text'\n                            id='email'\n                            name='email'\n                            placeholder='ex. janedoe@email.com'\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            Password\n                                <br />\n                        </Label>\n                        <div style={labelDescription}>\n                            <strong>\n                                (Must be at least 6 characters with no spaces)\n                            </strong>\n                        </div>\n                        <Input\n                            style={inputStyle}\n                            placeholder='Password'\n                            type='password'\n                            name='password'\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            Confirm Password\n                        </Label>\n                        <Input\n                            style={inputStyle}\n                            placeholder='Confirm Password'\n                            type='password'\n                            name='confirmPassword'\n                            value={this.state.confirmPassword}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            Username\n                            <br />\n                        </Label>\n                        <div style={labelDescription}>\n                            <strong>\n                                (Must be between 3 & 16 characters, no special characters & no spaces)\n                            </strong>\n                        </div>\n                        <Input\n                            style={inputStyle}\n                            placeholder='ex. JaneDoe14'\n                            type='username'\n                            name='username'\n                            value={this.state.username}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            First Name:\n                        </Label>\n                        <Input\n                            style={inputStyle}\n                            placeholder='ex. Jane'\n                            type='firstname'\n                            name='firstname'\n                            value={this.state.firstname}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            Last Name:\n                        </Label>\n                        <Input\n                            style={inputStyle}\n                            placeholder='ex. Doe'\n                            type='lastname'\n                            name='lastname'\n                            value={this.state.lastname}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button\n                            color='primary'\n                            size='lg'\n                            disabled={isInvalid}\n                            type='submit'>\n                            Sign Up\n                        </Button>\n                    </FormGroup>\n                </Form>\n            </div >\n        )\n    };\n}\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\n\nconst SignUpLink = () => (\n    <p style={{ fontSize: '16px' }}>\n        Don't have an account?\n        <Link to={Routes.signup}>\n            <Button color='success' size='lg'>\n                Sign Up\n            </Button>\n        </Link>\n    </p>\n);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React from 'react';\nimport { Button } from 'reactstrap';\nimport { withFirebase } from './Firebase';\n\nconst textsize = {\n  fontSize: \"25px\"\n}\n\nconst SignOutButton = ({ firebase }) => (\n  <Button style={textsize} color='link' onClick={firebase.doSignOut}>\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from './Session';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../constants/routes';\nimport axios from 'axios';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Col, Button } from 'reactstrap';\n\nconst cardStyle = {\n    border: '1px solid darkgrey',\n    borderRadius: '2px',\n    marginLeft: '5px',\n    marginRight: '5px',\n    overflow: 'auto',\n    height: '600px',\n    marginBottom: '10px'\n};\n\nconst textsize = {\n    fontSize: '25px'\n};\n\nconst textsize2 = {\n    fontSize: '25px',\n    margin: '0 auto'\n};\n\nconst cardImageStyle = {\n    paddingLeft: '2px',\n    paddingRight: '2px',\n    width: '200px',\n    margin: '0 auto'\n};\n\nconst cardTitleStyle = {\n    fontSize: '25px',\n};\n\nconst cardBodyStyle = {\n    fontSize: '15px',\n    margin: '0 auto'\n};\n\n//Stateful component to allow the grouplist to properly populate\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            grouplist: [],\n            error: null,\n            hasGroups: false\n        };\n    };\n\n    componentDidMount() {\n        if (this.props.grouplist) {\n            this.setState({ grouplist: this.props.grouplist });\n            this.checkIfGroups();\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.grouplist !== prevProps.grouplist) {\n            this.setState({ grouplist: this.props.grouplist });\n            this.checkIfGroups();\n        };\n    };\n\n    checkIfGroups() {\n        if (!this.props.grouplist) {\n            this.props.history.push(`/signin`);\n        };\n\n        if (this.props.grouplist.length > 0) {\n            this.setState({ hasGroups: true })\n        }\n    }\n\n    //TODO This only displays 3 groups properly!!\n    render() {\n        const { grouplist, hasGroups } = this.state;\n        return (\n            <div>\n                {hasGroups ? (grouplist.map(groupID => <GroupCard key={groupID} groupID={groupID} />)) : (<NoGroup />)}\n            </div>\n        );\n    };\n};\n\nconst NoGroup = () => {\n    return (\n        <div>\n            <p style={textsize}><strong>Welcome to Bookworm!</strong> </p>\n            <p style={textsize2} >You’ve taken your first step into being more engaged with reading! Why not create a group above? Once there be sure to add a book and invite some of your friends to join!</p>\n        </div>\n    )\n}\n\n//Stateful component to get the groupdata\nclass GroupCard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            groupName: '',\n            currentBook: '',\n            currentBenchmark: 0,\n            error: null,\n            bookTitle: '',\n            bookImage: '',\n            author: '',\n            date: ''\n        };\n    };\n\n    componentDidMount() {\n        const groupID = this.props.groupID;\n        this.getGroupData(groupID);\n    };\n\n    //First get the data for all the user is apart of\n    getGroupData = async (groupID) => {\n        const dbResponse = await axios.get(`/api/getgroupdata/${groupID}`);\n\n        if (dbResponse.status === 200) {\n            this.setState({\n                groupName: dbResponse.data.name,\n                currentBook: dbResponse.data.currentBook,\n                currentBenchmark: dbResponse.data.currentBenchmark\n            }, () => {\n\n                //Once that is written to state then grab the book they're currently reading and the latest post if they exist\n                axios.all([this.getBookData(), this.getPostData()]).then(axios.spread((bookData, postData) => {\n                    if (bookData.status === 200) {\n                        this.setState({\n                            bookTitle: bookData.data.title,\n                            bookImage: bookData.data.image\n                        });\n                    }\n\n                    if (postData.data.length > 0) {\n                        this.setState({\n                            author: postData.data[0].user,\n                            date: postData.data[0].date\n                        });\n                    };\n                }));\n            });\n        };\n    };\n\n    getBookData = () => {\n        return axios.get(`/api/getbookdata/${this.state.currentBook}`)\n    };\n\n    getPostData = () => {\n        return axios.get(`/api/getallgrouppost/${this.props.groupID}`);\n    };\n\n    render() {\n        const { currentBenchmark, bookImage, bookTitle, author, date, groupName } = this.state;\n        const postDate = new Date(this.state.date);\n        const { groupID } = this.props;\n\n        return (\n            <Col sm=\"3\">\n                <Card style={cardStyle}>\n                    <CardBody style={cardBodyStyle}>\n                        <CardTitle style={cardTitleStyle}>\n                            <strong>{groupName}</strong>\n                        </CardTitle>\n                        <br />\n                        <CardSubtitle>\n                            <strong>Next Chapter:  </strong>{currentBenchmark}\n                        </CardSubtitle>\n                    </CardBody>\n                    <CardImg style={cardImageStyle} src={bookImage} alt={bookTitle} />\n                    <CardBody style={cardBodyStyle}>\n                        <CardText>\n                            {author && <PostAuthor author={author} />}\n                            <br />\n                            {date && postDate.toLocaleString()}\n                        </CardText>\n                        <Link to={`/group/${groupID}`}>\n                            <Button color='success'>Go to Club</Button>\n                        </Link>\n                    </CardBody>\n                </Card>\n            </Col>\n        );\n    };\n};\n\nclass PostAuthor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: ''\n        };\n    };\n\n    componentDidMount = () => {\n        //Taking this out the of lifecycle method to make it an async function\n        this.getUsername();\n    };\n\n    getUsername = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.author}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        };\n    };\n\n    render() {\n        return (\n            <Fragment>\n                Last Post By: {this.state.username}\n            </Fragment>\n        );\n    };\n};\n\nconst HomeLink = () => (\n    <Link to={Routes.home}>\n        <Button style={textsize} color='link'>Home</Button>\n    </Link>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);\nexport { HomeLink }","import React, { Component } from 'react';\nimport { withAuthorization } from './Session';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../constants/routes';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\n\n//Using Swal to display message when group is created\nconst Alert = withReactContent(Swal);\n\nconst labelStyle = {\n    marginBottom: '0px'\n};\n\nconst initialState = {\n    groupName: '',\n    groupDescription: '',\n    error: null\n};\n\nconst textsize = {\n    fontSize: \"25px\"\n}\nconst formlabelStyle = {\n    fontSize: \"25px\"\n};\n\nconst forminputsize = {\n    fontSize: \"20px\"\n};\n\n\nclass CreateGroup extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const currentUserID = this.props.userID;\n\n        const { groupName, groupDescription } = this.state;\n\n        const dbResponse = await axios.post('/api/creategroup', { currentUserID, groupName, groupDescription });\n\n        Alert.fire({\n            type: 'success',\n            title: `${groupName} Created!`,\n            text: \"Taking you to the club page. Why don't you pick a book or add a user?\"\n        });\n\n        this.props.history.push(`/group/${dbResponse.data._id}`);\n    };\n\n    render() {\n        const { groupName, groupDescription, error } = this.state;\n\n        const isInvalid = groupName === '' || groupDescription === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n\n                <Form style={formlabelStyle} onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label style={labelStyle} htmlFor=\"groupName\" for=\"text\"> Group Name: </Label>\n                        <Input\n                            style={forminputsize}\n                            type=\"text\"\n                            name=\"groupName\"\n\n                            placeholder='Enter A Group Name'\n                            value={this.state.groupName}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label style={labelStyle} htmlFor=\"groupDescription\" for=\"text\">Enter A Group Description: </Label>\n                        <Input\n                            style={forminputsize}\n                            type=\"text\"\n                            name='groupDescription'\n                            placeholder='Description'\n                            value={this.state.groupDescription}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n                    <Button\n                        color=\"secondary\"\n                        size=\"lg\"\n                        disabled={isInvalid}\n                        type=\"submit\"\n                    >Create New Group\n                    </Button>\n\n                </Form>\n            </div>\n\n\n        );\n    };\n};\n\nconst CreateGroupLink = () => (\n    <Link to={Routes.createGroup}>\n        <button style={textsize} className='btn btn-link'>Create Group</button>\n    </Link>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(CreateGroup);\n\nexport { CreateGroupLink };","import React from 'react';\nimport '../App.css';\n\nimport * as Routes from '../constants/routes';\nimport SignOutButton from './SignOutButton';\nimport { HomeLink } from './Home';\nimport { CreateGroupLink } from './CreateGroup';\n\nimport { Nav, Navbar, NavItem, NavLink } from 'reactstrap';\nimport { Row, Col } from 'reactstrap';\n\nconst textsize = {\n    fontSize: '25px',\n    color: 'white',\n};\n\nconst navStyle = {\n    borderRadius: '0'\n}\n\nconst padding = {\n    marginLeft: '40px'\n};\n\nconst padding2 = {\n    textAlign: 'left',\n};\n\nconst NavBar = (props) => {\n    return (\n        <Navbar color=\"dark\" dark expand=\"md\" style={navStyle}>\n            <div style={textsize}>\n                <Row>\n                    <Col sm={{ size: '3', offset: 1 }}>\n                        Logo Goes Here\n                    </Col>\n                    <Col xs={{ size: '4', offset: '1' }}>\n                        {props.authUser ? (<section>\n                            <Nav navbar>\n                                <NavItem >\n                                    <HomeLink />\n                                </NavItem>\n                                <NavItem >\n                                    <CreateGroupLink />\n                                </NavItem>\n                                <NavItem>\n                                    <SignOutButton />\n                                </NavItem>\n                            </Nav>\n                        </section>\n                        ) : (\n                                <section>\n                                    <Nav style={textsize}  >\n                                        <div style={padding2}>\n                                            <NavItem>\n                                                <NavLink href={Routes.signin}>Sign In </NavLink>\n                                            </NavItem>\n                                        </div>\n                                        <div style={padding}>\n                                            <NavItem>\n                                                <NavLink href={Routes.signup}>Sign Up</NavLink>\n                                            </NavItem>\n                                        </div>\n                                    </Nav>\n                                </section>\n                            )\n                        }\n                    </Col>\n                </Row>\n            </div>\n        </Navbar>\n    );\n};\n\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withAuthorization } from './Session';\n\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\n\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n};\n\nconst labelStyle = {\n    marginBottom: '0px'\n};\n\nconst initalState = {\n    password: '',\n    passwordConfirm: '',\n    error: null,\n    passwordValid: false,\n    validMessage: []\n};\n\nclass PasswordChangeForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...initalState };\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        //Checks if the password they inputted is correct. If it isn't it will not submit\n        if (this.checkValidInput()) {\n            const { password } = this.state;\n\n            this.props.firebase\n                .doPasswordUpdate(password)\n                .then(() => {\n                    this.setState({ ...initalState });\n                    this.props.history.push(Routes.home);\n                })\n                .catch(error => {\n                    this.setState({ error });\n                });\n        }\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    }\n\n    //Field name to keep validation consistant, but there's only password here\n    validateForm = (fieldName, value) => {\n        let validCheck;\n        let checkPassword = value.length >= 6;\n        let noSpacesInPassword = value.match(/^\\S*$/);\n        validCheck = checkPassword && noSpacesInPassword ? true : false;\n        this.setState({ passwordValid: validCheck });\n    }\n\n    render() {\n        const { password, passwordConfirm, error, validMessage } = this.state;\n\n        const isInvalid =\n            password !== passwordConfirm || password === '';\n\n        return (\n            <div>\n                <h3>Update Password:</h3>\n                <br />\n                {validMessage && validMessage.map((message, i) => <p key={i}>{message}</p>)}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    {error && <p>{error.message}</p>}\n                    <div className=\"col-1 col-ml-auto\">\n                        <label className=\"form-label\" style={labelStyle} htmlFor=\"password\">New Password:</label>\n                    </div>\n                    <div className='form-group'>\n                        <input className=\"form-input\"\n                            style={inputStyle}\n                            name=\"password\"\n                            value={password}\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            placeholder=\"New Password\"\n                        />\n                    </div>\n                    <div className=\"col-1 col-ml-auto\">\n                        <label className=\"form-label\" style={labelStyle} htmlFor=\"passwordConfirm\">Confirm Password:</label>\n                    </div>\n                    <div className='form-group'>\n                        <input className=\"form-input\"\n                            style={inputStyle}\n                            name=\"passwordConfirm\"\n                            value={passwordConfirm}\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            placeholder=\"Confirm New Password\"\n                        />\n                    </div>\n                    <div className=\"form-group \">\n                        <div className=\"col-7\"></div>\n                        <button\n                            className=\"btn btn-primary col-1 col-mr-auto\"\n                            disabled={isInvalid}\n                            type=\"submit\">Update Password</button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(compose(withRouter, withFirebase)(PasswordChangeForm));","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from './Session';\nimport PasswordChangeForm from './PasswordChange';\nimport axios from 'axios';\nimport { Button, Label, Input, } from \"reactstrap\";\n\nconst inputStyle = {\n    width: '25%',\n    height: '40px',\n    fontSize: '16px'\n};\n\nconst labelStyle = {\n    marginBottom: '0px'\n};\n\nconst shiftLeft = {\n    marginLeft: '30px'\n};\n\nconst updateProfileStyle = {\n    fontSize: '20px'\n};\n\nconst profileDisplayStyle = {\n    fontSize: '16px'\n};\n\nconst initialUpdateState = {\n    username: '',\n    email: '',\n    firstname: '',\n    lastname: '',\n    emailValid: false,\n    usernameValid: false,\n    validMessage: ''\n};\n\nconst initialProfileState = {\n    dbUsername: '',\n    dbEmail: '',\n    dbFirstname: '',\n    dbLastname: '',\n    isCurrentUser: false\n};\n\nclass UserProfile extends Component {\n    constructor(props) {\n        super(props)\n\n        //Listed twice as to not change the info on the profile when they begin updating it\n        this.state = { ...initialProfileState };\n    };\n\n    componentDidMount() {\n        const userID = this.props.match.params.userID;\n        this.getUserData(userID);\n        this.checkCurrentUser(userID);\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userID !== prevProps.match.params.userID || this.props.userID !== prevProps.userID) {\n            const userID = this.props.match.params.userID;\n            this.getUserData(userID);\n            this.checkCurrentUser(userID);\n        };\n    };\n\n    checkCurrentUser = (userIDFromURL) => {\n        if (this.props.userID === userIDFromURL) {\n            this.setState({\n                isCurrentUser: true\n            })\n        };\n    };\n\n    updatedProfile = () => {\n        this.getUserData(this.props.match.params.userID);\n    };\n\n    getUserData = async (userID) => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${userID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                dbUsername: dbResponse.data.local.username,\n                dbEmail: dbResponse.data.local.email,\n                dbFirstname: dbResponse.data.local.firstname,\n                dbLastname: dbResponse.data.local.lastname,\n            });\n        };\n    };\n\n    render() {\n        const { isCurrentUser, dbUsername, dbEmail, dbFirstname, dbLastname } = this.state;\n\n        return (\n            <div style={shiftLeft}>\n                <h1>{dbUsername}'s Profile</h1>\n                <div style={profileDisplayStyle}>Username: {dbUsername}</div>\n                <div style={profileDisplayStyle}>Email: {dbEmail}</div>\n                <div style={profileDisplayStyle}>Firstname: {dbFirstname}</div>\n                <div style={profileDisplayStyle}>Lastname: {dbLastname}</div>\n\n                {/* If the user is the current user logged in they can update their profile here */}\n                {isCurrentUser &&\n                    <Fragment>\n                        <UpdateInformationForm userID={this.props.userID} updatedProfile={this.updatedProfile} />\n                        <br />\n                        <PasswordChangeForm />\n                    </Fragment>\n                }\n            </div>\n        );\n    };\n};\n\nclass UpdateInformationForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { ...initialUpdateState };\n    };\n\n    handleSubmit = async (fieldSubmitted) => {\n\n        if (this.checkValidInput(fieldSubmitted)) {\n            const value = this.state[fieldSubmitted];\n            const userID = this.props.userID;\n            const request = fieldSubmitted;\n\n            const dbResponse = await axios.put(`/api/updateuser`, { userID, value, request });\n\n            if (dbResponse.status === 200) {\n                this.props.updatedProfile();\n                this.setState({ ...initialUpdateState });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    checkValidInput = (fieldSubmitted) => {\n        if (fieldSubmitted === 'email' && !this.state.emailValid) {\n            this.setState({ validMessage: `Email entered is invalid` });\n            return false;\n        };\n\n        if (fieldSubmitted === 'username' && !this.state.usernameValid) {\n            this.setState({ validMessage: `Please ensure username is between 3 & 16 characters & it only contains letters, numbers, underscores & dashes` });\n            return false;\n        };\n\n        return true;\n    };\n\n    render() {\n        const { username, email, firstname, lastname, validMessage } = this.state;\n\n        const usernameIsInvalid = username === '';\n        const emailIsInvalid = email === '';\n        const firstnameIsInvalid = firstname === '';\n        const lastnameIsInvalid = lastname === '';\n\n        return (\n            <div style={updateProfileStyle}>\n                {validMessage && <p>{validMessage}</p>}\n                <br />\n                <Label style={labelStyle}>\n                    Username:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='username'\n                    placeholder='Update Username'\n                    value={username}\n                    onChange={this.handleChange} />\n                <Button\n                    color='primary'\n                    disabled={usernameIsInvalid}\n                    onClick={() => this.handleSubmit('username')}>\n                    Update Username\n                </Button>\n\n                <br />\n\n                <Label style={labelStyle}>\n                    Email:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='email'\n                    placeholder='Update Email'\n                    value={email}\n                    onChange={this.handleChange} />\n                <Button\n                    color='primary'\n                    disabled={emailIsInvalid}\n                    onClick={() => this.handleSubmit('email')}>\n                    Update Email\n                </Button>\n\n                <br />\n\n                <Label style={labelStyle}>\n                    First Name:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='firstname'\n                    placeholder='Update Firstname'\n                    value={firstname}\n                    onChange={this.handleChange}></Input>\n                <Button\n                    color='primary'\n                    disabled={firstnameIsInvalid}\n                    onClick={() => this.handleSubmit('firstname')}>\n                    Update Firstname\n                </Button>\n\n                <br />\n\n                <Label style={labelStyle}>\n                    Last Name:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='lastname'\n                    placeholder='Update Lastname'\n                    value={lastname}\n                    onChange={this.handleChange} />\n                <Button\n                    color='primary'\n                    disabled={lastnameIsInvalid}\n                    onClick={() => this.handleSubmit('lastname')}>\n                    Update Lastname\n                </Button>\n            </div >\n        );\n    };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UserProfile);","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nconst initialState = {\n    title: '',\n    image: '',\n    authors: [],\n    error: null\n};\n\nconst progressBarStyle = {\n    position: 'center',\n    height: '20px',\n    width: '350px',\n    borderRadius: '50px',\n    border: '1px solid #333',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n};\n\nclass CurrentBook extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState }\n    };\n\n    componentDidMount() {\n        const bookID = this.props.currentBook;\n        if (bookID) {\n            this.getCurrentBook(bookID);\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.currentBook !== prevProps.currentBook) {\n            const bookID = this.props.currentBook;\n            this.getCurrentBook(bookID)\n        };\n    };\n\n    getCurrentBook = async (bookID) => {\n        const dbResponse = await axios.get(`/api/getbookdata/${bookID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                title: dbResponse.data.title,\n                image: dbResponse.data.image,\n                authors: dbResponse.data.authors\n            })\n        } else {\n            this.setState({\n                error: dbResponse.data.error\n            });\n        };\n    };\n\n    render() {\n        const percentageComplete = (this.props.currentBenchmark / this.props.totalBenchmark) * 100;\n        const { currentBenchmark, totalBenchmark } = this.props;\n        const { title, image } = this.state;\n\n        return (\n            <div className='currentBook'>\n                <div ><strong>Current Book </strong>\n                    <br></br>\n                    {title}\n                    <br></br>\n                    <img width='auto' height='75%' src={image} alt={`${title}`} />\n                </div>\n\n                <br></br>\n                <div ><strong> Current Progress </strong>\n                    <br></br>\n                    <ProgressBar percentage={percentageComplete} />\n                    {currentBenchmark} / {totalBenchmark} </div>\n                <br />\n            </div>\n        );\n    };\n};\n\nconst ProgressBar = (props) => {\n    return (\n        <div\n            style={progressBarStyle}>\n            <BarFiller percentage={props.percentage} />\n        </div>\n    );\n};\n\nconst BarFiller = (props) => {\n    return (\n        <div\n            style={{\n                background: '#1DA598',\n                height: '100%',\n                borderRadius: 'inherit',\n                transition: 'width .2s ease-in',\n                width: `${props.percentage}%`\n            }} />\n    );\n};\n\nexport default CurrentBook;","\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BarLoader } from \"react-spinners\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { Col, Button, Form, FormGroup, Label, Input, Card, CardImg, CardText, CardBody, CardTitle, } from \"reactstrap\";\n\n//Using Swal to display messages when add book button is hit\nconst Alert = withReactContent(Swal);\n\nconst labelStyle = {\n  marginBottom: '0px'\n};\n\nconst colStyle = {\n  margin: '0'\n}\n\nconst cardStyle = {\n  width: '400px',\n  height: '600px',\n  marginBottom: '10px'\n};\n\nconst cardImageStyle = {\n  paddingLeft: '2px',\n  paddingRight: '2px',\n  width: '200px',\n  margin: '0 auto'\n}\n\nconst cardTitleStyle = {\n  fontSize: '25px',\n};\n\nconst cardBodyStyle = {\n  fontSize: '15px',\n  margin: '0 auto'\n};\n\nconst loaderStyle = `\n    display: block;\n    margin: 0 auto;\n`;\n\nconst formlabelStyle = {\n  fontSize: '25px'\n};\n\nconst forminputsize = {\n  fontSize: '20px'\n};\n\nclass AddBookPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookSearch: \"\",\n      error: null,\n      bookArray: [],\n      loading: false\n    };\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { bookSearch } = this.state;\n\n    //This changes the book the user enters into a searchable term by the browser\n    const searchableBook = bookSearch\n      .trim()\n      .split(\" \")\n      .join(\"+\");\n\n    this.setState({ loading: true });\n    const dbResponse = await axios.get(`/api/searchbook/${searchableBook}`);\n\n    if (dbResponse.status === 200) {\n      this.setState({ loading: false });\n      //returns an array of 1 - 20 books and maps over them\n      this.setState({ bookArray: dbResponse.data });\n    } else {\n      this.setState({ loading: false });\n      this.setState({ error: dbResponse.data.error });\n    }\n    //TODO Send this to another component to then map over the\n  };\n\n  render() {\n    const { bookSearch, error, bookArray, loading } = this.state;\n    const isInvalid = bookSearch === \"\";\n\n    return (\n      <div className=\"bookSearch\">\n        {error && <p>{error}</p>}\n        {loading ? (\n          <BarLoader\n            css={loaderStyle}\n            sizeUnit={\"px\"}\n            height={4}\n            width={200}\n            color={\"#36D7B7\"}\n            loading={loading}\n          />\n        ) : (\n            <div>\n\n              <Form style={formlabelStyle} onSubmit={this.handleSubmit}>\n                <FormGroup>\n                  <Label style={labelStyle} htmlFor=\"bookSearch\" for=\"text\">\n                    {\" \"}\n                    Book to Search:\n                </Label>\n                  <Input\n                    style={forminputsize}\n                    type=\"text\"\n                    name=\"bookSearch\"\n                    placeholder=\"Enter a Book to Search\"\n                    value={this.state.bookSearch}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n                <Button\n                  color=\"secondary\"\n                  size=\"lg\"\n                  disabled={isInvalid}\n                  type=\"submit\">\n                  Search Book\n              </Button>\n              </Form>{\" \"}\n\n            </div>\n          )}\n        {bookArray &&\n          bookArray.map((book, i) => (\n            <SingleBook\n              book={book}\n              key={i}\n              isAdmin={this.props.isAdmin}\n              groupID={this.props.groupID}\n              updatePage={this.props.updatePage}\n            />\n          ))}\n      </div>\n    );\n  }\n}\n\n//This component is going to have state to wrap the book in the submit and send it to the database\nclass SingleBook extends Component {\n\n  //We are going to chain alerts so the user adds a book then immeditley sets it up for use\n  //TODO Possibly redo this to make three modals in order and then three calls to the api\n  getChapterCount = async title => {\n    //Send alert to user that they should add the chapters\n    const { value: totalBenchmark } = await Alert.fire({\n      type: \"info\",\n      input: \"number\",\n      title: `How many chapters in ${title}?`,\n      showCancelButton: true,\n      inputValidator: value => {\n        if (!value || value <= 0) {\n          return \"Please input a number above 0\";\n        }\n      }\n    });\n    if (totalBenchmark) {\n      this.addBookToGroup(totalBenchmark);\n    }\n  };\n\n  addBookToGroup = async totalBenchmark => {\n    const chosenBook = { ...this.props.book };\n    const { groupID, isAdmin } = this.props;\n\n    const dbResponse = await axios.post(`/api/addbook`, { groupID, isAdmin, chosenBook });\n    if (dbResponse.status === 200) {\n      this.addTotalBenchmark(totalBenchmark, groupID, isAdmin, chosenBook.title);\n    }\n  };\n\n  addTotalBenchmark = async (totalCount, groupID, isAdmin, title) => {\n    const dbResponse = await axios.put(`/api/updatepagesetup`, { totalCount, groupID, isAdmin });\n\n    if (dbResponse.status === 200) {\n      //Send alert to user that they should add the first chapter for the group\n      const { value: nextBenchmark } = await Alert.fire({\n        type: \"info\",\n        input: \"number\",\n        title: `What's the group's first chapter goal?`,\n        showCancelButton: true,\n        inputValidator: value => {\n          if (!value || value <= 0 || value > totalCount) {\n            return \"Please input a number above 0 and below the total chapters\";\n          }\n        }\n      });\n      this.addCurrentBenchmark(nextBenchmark, groupID, isAdmin, title);\n    }\n  };\n\n  addCurrentBenchmark = async (nextBenchmark, groupID, isAdmin, title) => {\n    const dbResponse = await axios.put(`/api/updatebenchmark`, {\n      nextBenchmark,\n      groupID,\n      isAdmin\n    });\n\n    if (dbResponse.status === 200) {\n      Alert.fire({\n        type: \"success\",\n        title: `${title} Added to Group!`,\n        text:\n          \"Sending you back to the club page. Why not make a post about the new book?\"\n      });\n\n      this.props.updatePage(`main`);\n    }\n  }\n\n  // Taking out the book object to make displaying it easier\n  render() {\n    const { title, authors, image, pageCount, publishedDate } = this.props.book\n    return (\n      <Col sm='6' style={colStyle}>\n        <Card style={cardStyle}>\n          <CardBody style={cardBodyStyle}>\n            <CardTitle style={cardTitleStyle}>\n              <strong>{title}</strong>\n            </CardTitle>\n          </CardBody>\n          <CardImg style={cardImageStyle} top src={image} alt={title} />\n          <CardBody style={cardBodyStyle}>\n            <CardText >\n              <div>\n                <strong>Author:</strong>\n                <br />\n                {authors[0]}\n              </div>\n              <br />\n              <div>\n                <strong>Pages:</strong> {pageCount}\n              </div>\n              <br />\n              <div>\n                <strong>Date Published:</strong> {publishedDate}\n              </div>\n              <br />\n              <button style={{ width: '100px' }} onClick={() => this.getChapterCount(title)}>Read this Book</button>\n            </CardText>\n          </CardBody>\n        </Card>\n      </Col>\n    )\n  }\n};\n\n// Taking out the book object to make displaying it easier\n\n\n\nexport default AddBookPage;\n","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input, } from 'reactstrap';\n\nconst labelStyle = {\n    fontSize: '25px'\n}\n\nconst forminputsize = {\n    fontSize: '20px'\n}\n\nconst initialState = {\n    title: '',\n    text: '',\n    error: null\n};\n\nclass AddPost extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { userID, groupID } = this.props\n\n        const userPost = {\n            title: this.state.title,\n            text: this.state.text\n        }\n\n        const dbResponse = await axios.post(`/api/newpost`, { userID, groupID, userPost });\n\n        if (dbResponse.status === 200) {\n            this.props.getAllPosts();\n            this.setState({ ...initialState })\n        };\n        //TODO SHOW MODAL FOR POST ADDED\n    }\n\n    //updated form \n    render() {\n        const { text, title, error } = this.state;\n\n        const isInvalid = text === '' || title === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n\n                <Form style={labelStyle} onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"text\">Post Title</Label>\n                        <Input style={forminputsize} type=\"text\" name=\"title\" id=\"exampleEmail\" placeholder=\"Your Post's Title\" value={this.state.title}\n                            onChange={this.handleChange} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"text\">Post Body</Label>\n                        <Input style={forminputsize} type=\"textarea\" name=\"text\" id=\"exampleText\" placeholder='Write your Post'\n                            value={this.state.text}\n                            onChange={this.handleChange} />\n                    </FormGroup>\n                    <Button color=\"secondary\" size=\"lg\"\n                        disabled={isInvalid}\n                        type='submit'>Submit Post</Button>\n                </Form>\n            </div>\n        );\n    };\n};\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AddPost);\n","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Button } from 'reactstrap';\nimport AddPost from './AddPost';\nimport { Row, Col } from 'reactstrap';\nimport Worm from './images/wormlong2.png'\n\nconst divider = {\n    height: '50px',\n    width: '100%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    backgroundImage: `url(${Worm})`,\n    marginTop: '10px',\n    marginBottom: '-5px',\n}\n\nconst date = {\n    textAlign: 'center',\n    fontSize: '8px',\n    marginBottom: '10px',\n    marginTop: '-1px',\n}\n\nconst buttonPosition = {\n    marginTop: '10px',\n}\n\nconst commentContainer = {\n    borderStyle: 'solid',\n    borderWidth: '2px',\n    backgroundColor: '#e9ecef',\n    marginTop: '10px',\n    marginBottom: '20px',\n}\n\nconst postTitle = {\n    fontSize: '20px',\n    textAlign: 'center',\n}\n\nconst postStyle = {\n    fontSize: '12px',\n}\n\nconst inputStyle = {\n    width: `50%`,\n    height: `40px`\n}\n\nconst initalState = {\n    text: '',\n    error: null,\n    postArray: []\n}\n\nclass ShowAllPosts extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initalState }\n    };\n\n    //In both did update and did mount based on if the user goes to another page within the group or loads it\n    componentDidMount() {\n        this.getAllPosts()\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.groupID !== prevProps.groupID) {\n            this.getAllPosts()\n        };\n    };\n\n    getAllPosts = async () => {\n        const groupID = this.props.groupID;\n        const dbResponse = await axios.get(`/api/getallgrouppost/${groupID}`);\n\n        if (dbResponse.status === 200) {\n            this.setState({ postArray: dbResponse.data });\n        };\n    };\n\n    render() {\n        const { postArray } = this.state;\n        const { userID, groupID } = this.props;\n\n        return (\n            <div>\n                <AddPost userID={this.props.userID} groupID={groupID} getAllPosts={this.getAllPosts} />\n                <h1>Posts</h1>\n                {postArray.map(post => <SinglePost key={post._id} post={post} userID={userID} getAllPosts={this.getAllPosts} />)}\n            </div>\n        );\n    };\n};\n\n\nclass SinglePost extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            error: null,\n            comment: '',\n        }\n    };\n\n    componentDidMount = () => {\n        //Taking this out the of lifecycle method to make it an async function\n        this.getUsername();\n    };\n\n    getUsername = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.post.user}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        };\n    };\n\n    render() {\n        const { username } = this.state;\n        const { title, text, _id, comment } = this.props.post;\n        const { userID } = this.props;\n        const postDate = new Date(this.props.post.date);\n\n        return (\n            <span>\n                <div style={commentContainer}>\n                    <div style={postTitle}>\n                        <Row>\n                            <Col xs=\"12\">\n                                <strong> {title} </strong>\n                            </Col>\n                        </Row>\n                    </div>\n\n                    <p style={postStyle}>\n                        <strong>{username} : </strong>\n                        {text}\n                    </p>\n                    <div style={date}>\n                        <Row>\n                            <Col xs=\"12\">\n                                {postDate.toLocaleString()}\n                            </Col>\n                        </Row>\n                    </div>\n                    <hr></hr>\n                    {comment.map(singleComment => <ShowComment key={singleComment._id} comment={singleComment} />)}\n                    <AddComment postID={_id} userID={userID} getAllPosts={this.props.getAllPosts} />\n                    <div style={divider}>\n                    </div>\n                </div>\n            </span>\n        );\n    };\n};\n\nclass ShowComment extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: ''\n        };\n    };\n\n    componentDidMount = () => {\n        //Taking this out the of lifecycle method to make it an async function\n        this.getUsername();\n    };\n\n    getUsername = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.comment.user}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        };\n    };\n\n    render() {\n        const { username } = this.state;\n        const { text } = this.props.comment;\n        const commentDate = new Date(this.props.comment.date)\n\n        return (\n            <Fragment>\n                <p style={postStyle}>\n                    <strong>{username} : </strong>\n                    {text}\n                </p>\n                <div style={date}>\n                    <Row>\n                        <Col xs=\"12\">\n                            {commentDate.toLocaleString()}\n                        </Col>\n                    </Row>\n                </div>\n                <hr></hr>\n            </Fragment>\n        );\n    };\n};\n\nclass AddComment extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            comment: ''\n        };\n    };\n\n    handleSubmit = async () => {\n        const comment = this.state.comment;\n        const userID = this.props.userID;\n        const postID = this.props.postID;\n\n        const dbResponse = await axios.post(`/api/newcomment`, { userID, postID, comment });\n        if (dbResponse.status === 200) {\n            this.props.getAllPosts();\n            this.setState({ comment: '' })\n        };\n    };\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { comment } = this.state;\n\n        const isInvalid = comment === '';\n\n        return (\n\n            <div>\n                <Row>\n                    <Col sm={{ size: '8', offset: 2 }}>\n                        <input className='form-input'\n                            style={inputStyle}\n                            type='text'\n                            name='comment'\n                            placeholder='Add A Comment'\n                            value={comment}\n                            onChange={this.handleChange}></input>\n                    </Col>\n                    <Col sm={{ size: '2' }}>\n                        <Button style={buttonPosition} color=\"primary\"\n                            disabled={isInvalid}\n                            onClick={this.handleSubmit}>Add Comment</Button>\n                    </Col>\n                </Row>\n            </div>\n        );\n    };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(ShowAllPosts);","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input, } from 'reactstrap';\n\nconst labelStyle = {\n    marginBottom: '0px'\n};\n\nconst initialState = {\n    nextBenchmark: '',\n    totalBenchmark: '',\n    error: null\n};\n\nconst formlabelStyle = {\n    fontSize: '25px'\n};\n\nconst forminputsize = {\n    fontSize: '20px'\n};\n\n\nclass UpdateBenchmark extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleCurrentSubmit = async event => {\n        event.preventDefault();\n\n        const nextBenchmark = +this.state.nextBenchmark;\n        const { groupID, isAdmin } = this.props;\n\n        try {\n            const dbResponse = await axios.put(`/api/updatebenchmark`, { nextBenchmark, groupID, isAdmin });\n\n            if (dbResponse.status === 200) {\n                this.props.updatePage('main');\n            }\n        } catch (error) {\n            this.setState({ error: { message: `Moderator needed to update benchmark` } })\n        };\n    };\n\n    handleTotalSubmit = async event => {\n        event.preventDefault();\n\n        const totalCount = +this.state.totalBenchmark;\n        const { groupID, isAdmin } = this.props;\n\n        try {\n            const dbResponse = await axios.put(`/api/updatepagesetup`, { totalCount, groupID, isAdmin });\n\n            if (dbResponse.status === 200) {\n                this.props.updatePage('main');\n            }\n        } catch (error) {\n            this.setState({ error: { message: `Moderator needed to update benchmark` } });\n        };\n    };\n\n    render() {\n        const { nextBenchmark, totalBenchmark, error } = this.state;\n\n        const currentIsInvalid = nextBenchmark === '' || nextBenchmark < 0;\n        const totalIsInvalid = totalBenchmark === '' || totalBenchmark < 0;\n\n        return (\n            <div>\n\n                <div>\n                    <br />\n                    {/* If there's an error with sign in then display the error */}\n                    {error && <p>{error.message}</p>}\n                    <Form style={formlabelStyle} onSubmit={this.handleCurrentSubmit}>\n                        <FormGroup>\n                            <Label style={labelStyle} htmlFor='nextBenchmark' for=\"text\"> Next Goal for Group:</Label>\n                            <Input style={forminputsize} type='number' name='nextBenchmark' id=\"exampleEmail\" placeholder='What is the next goal for the group?' value={this.state.nextBenchmark}\n                                onChange={this.handleChange} />\n                        </FormGroup>\n                        <Button color=\"secondary\" size=\"lg\" disabled={currentIsInvalid}\n                            type='submit'>Submit Post</Button>\n                    </Form>\n                </div>\n\n\n                <div>\n                    <br />\n                    {/* If there's an error with sign in then display the error */}\n                    {error && <p>{error.message}</p>}\n\n                    <Form style={formlabelStyle} onSubmit={this.handleTotalSubmit}>\n                        <FormGroup>\n                            <Label style={labelStyle} htmlFor='totalBenchmark' for=\"text\"> Update Total Benchmarks / Chapters:</Label>\n                            <Input style={forminputsize} type='number' name='totalBenchmark' id=\"exampleEmail\" placeholder='What is the total benchmarks or chapters of this book?' value={this.state.totalBenchmark}\n                                onChange={this.handleChange} />\n                        </FormGroup>\n                        <Button color=\"secondary\" size=\"lg\" disabled={totalIsInvalid}\n                            type='submit'>Update Total</Button>\n                    </Form>\n                </div>\n            </div>\n\n        );\n    };\n};\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UpdateBenchmark);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Button, Form, FormGroup, Label, Input, } from 'reactstrap';\n\n//Using Swal to display messages when submit button is hit\nconst Alert = withReactContent(Swal);\n\nconst labelStyle = {\n    marginBottom: '0px'\n};\n\n\nconst formlabelStyle = {\n    fontSize: '25px'\n};\n\nconst forminputsize = {\n    fontSize: '20px'\n};\n\nclass UserSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userSearch: '',\n            error: null,\n            userArray: [],\n            searchSelect: ''\n        }\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { userSearch, searchSelect } = this.state;\n\n        const dbResponse = await axios.get(`/api/usersearch/${userSearch}/${searchSelect}`);\n\n        this.setState({ userArray: dbResponse.data });\n    }\n\n    render() {\n        const { userSearch, error, userArray, searchSelect } = this.state;\n        const isInvalid = userSearch === '' || searchSelect === '';\n\n        return (\n\n            <div>\n                {error && <p>{error}</p>}\n                <Form style={formlabelStyle} onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label style={labelStyle} for=\"text\"> Search By:</Label>\n                        <Input style={forminputsize} type='select' name='searchSelect' id=\"searchSelection\" value={this.state.searchSelect}\n                            onChange={this.handleChange}>\n                            <option value=''> </option>\n                            <option value='email'>Email</option>\n                            <option value='username'>Username</option>\n                        </Input>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label style={labelStyle} htmlFor='userSearch' for=\"text\"> Search Users:</Label>\n                        <Input style={forminputsize} type='text' name='userSearch' id=\"exampleEmail\" placeholder='Search User' value={this.state.userSearch}\n                            onChange={this.handleChange} />\n                    </FormGroup>\n\n                    <Button color=\"secondary\" size=\"lg\" disabled={isInvalid}\n                        type='submit'>Search User</Button>\n                </Form>\n\n                {userArray && userArray.map((user, i) => <SingleUser user={user} key={i} isAdmin={this.props.isAdmin} groupID={this.props.groupID} updatePage={this.props.updatePage} />)}\n            </div>\n        )\n    }\n}\n\n//This component is going to have state to wrap the book in the submit and send it to the database\nclass SingleUser extends Component {\n\n    addUserToGroup = async (event) => {\n        const { isAdmin, groupID } = this.props;\n        const { userID, username } = this.props.user;\n        const dbResponse = await axios.put(`/api/addusertogroup`, { isAdmin, groupID, userID });\n\n        if (dbResponse.status === 200) {\n            Alert.fire({\n                type: 'success',\n                title: `${username} Added!`,\n                text: 'Sending you back to the club page'\n            });\n            this.props.updatePage(`main`);\n        };\n    };\n\n    // Taking out the book object to make displaying it easier\n    render() {\n        const { isAdmin } = this.props;\n        const { email, username } = this.props.user;\n\n        return (\n            <div className='userCard'>\n                <div>Email: {email}</div>\n                <div>Username: {username}</div>\n\n                {isAdmin && <button className='btn btn-primary' onClick={this.addUserToGroup}>Add User To Group</button>}\n            </div>\n        );\n    };\n};\n\nexport default UserSearch;","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst UserList = (props) => {\n    return (\n        <Fragment>\n            <h2 >Group Members</h2>\n            <div>\n                {props.userlist.map((user, i) => <Link to={`/user/${user._id}`} key={i}><SingleUser userID={user._id} key={user._id} /></Link>)}\n            </div>\n            <br />\n        </Fragment>\n    );\n};\n\nclass SingleUser extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            error: null\n        };\n    };\n\n    componentDidMount = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.userID}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username });\n        } else {\n            this.setState({ error: dbResponse.data });\n        };\n    };\n\n    render() {\n        return (\n            <div>{this.state.username}</div>\n        );\n    };\n};\n\n\n\nexport default UserList;","import React from 'react';\nimport { Button } from 'reactstrap';\n\nconst ButtonStyle = {\n    fontSize: '17px',\n\n\n\n}\n\nconst GroupNav = (props) => {\n    return (\n        <div align='center' >\n            Admin Panel\n                <hr></hr>\n            <Button outline color='primary' style={ButtonStyle} onClick={() => props.updatePage('main')}>Show Club Page</Button>\n            <Button outline color='primary' style={ButtonStyle} onClick={() => props.updatePage('updateBook')}>Update Book</Button>\n            <Button outline color='primary' style={ButtonStyle} onClick={() => props.updatePage('addUser')}>Add User</Button>\n        </div>\n    )\n}\n\nexport default GroupNav;","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport CurrentBook from './CurrentBook';\nimport AddBook from './AddBook';\n\nimport ShowAllPosts from './ShowAllPosts';\nimport UpdateBenchmark from './UpdateBenchmark';\nimport UserSearch from '../UserSearch';\nimport UserList from './UserList';\nimport GroupNav from './GroupNav';\nimport { Row, Col } from 'reactstrap';\n\n\n\n//Initializes all the data we need for the group as well as what should display on the app\nconst initialState = {\n  groupID: 0,\n  groupName: '',\n  groupDescription: '',\n  userlist: [],\n  currentBook: '',\n  pastBook: [],\n  currentBenchmark: 0,\n  previousBenchmark: [],\n  totalBenchmark: 0,\n  isAdmin: false,\n  error: null,\n  showMainPage: true,\n  updateBook: false,\n  addUser: false\n};\n\nconst adminpanel = {\n  textAlign: 'center',\n  fontSize: '25px',\n  border: '1px double #000000',\n  padding: '10px',\n  marginBottom: '50px'\n};\nconst groupinfopanel = {\n  textAlign: 'center',\n  fontSize: '50px',\n\n  padding: '10px',\n  marginBottom: '30px'\n};\n\nconst columnbackground = {\n  fontSize: '30px',\n  padding: '10px',\n  marginBottom: '50px',\n  textAlign: 'center'\n};\n\nclass GroupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...initialState };\n  }\n\n  componentDidMount() {\n    const groupIDFromURL = this.props.match.params.groupID;\n    if (typeof groupIDFromURL !== 'undefined') {\n      this.getGroupData(groupIDFromURL);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userID !== prevProps.userID) {\n      const groupID = this.props.match.params.groupID;\n      this.getGroupData(groupID);\n    }\n  }\n\n  getGroupData = async groupID => {\n    const dbResponse = await axios.get(`/api/getgroupdata/${groupID}`);\n    if (dbResponse.status === 200) {\n      this.setState(\n        {\n          groupID: dbResponse.data._id,\n          groupName: dbResponse.data.name,\n          groupDescription: dbResponse.data.description,\n          userlist: dbResponse.data.userlist,\n          currentBook: dbResponse.data.currentBook,\n          pastBook: dbResponse.data.pastBook,\n          currentBenchmark: dbResponse.data.currentBenchmark,\n          previousBenchmark: dbResponse.data.previousBenchmark,\n          totalBenchmark: dbResponse.data.totalBenchmark\n        },\n        () => {\n          //If statement incase the componentDidMount happens first\n          if (this.props.userID) {\n            this.checkAdmin();\n          }\n        }\n      );\n    } else {\n      //TODO Check Error message\n      this.setState({\n        error: dbResponse.data.error\n      });\n    }\n  };\n\n  checkAdmin = () => {\n    const { userlist } = this.state;\n    const currentUserID = this.props.userID;\n\n    const currentUser = userlist.filter(user => user._id === currentUserID);\n    if (currentUser[0].isAdmin) {\n      this.setState({\n        isAdmin: true\n      });\n    }\n  };\n\n  //Toggles the page based on what the user chooses to see\n  updatePage = showPage => {\n    switch (showPage) {\n      case 'main':\n        this.setState({\n          showMainPage: true,\n          updateBook: false,\n          addUser: false\n        });\n        this.getGroupData(this.state.groupID);\n        break;\n      case 'updateBook':\n        this.setState({\n          showMainPage: false,\n          updateBook: true,\n          addUser: false\n        });\n        this.getGroupData(this.state.groupID);\n        break;\n      case 'addUser':\n        this.setState({\n          showMainPage: false,\n          updateBook: false,\n          addUser: true\n        });\n        this.getGroupData(this.state.groupID);\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      groupID,\n      groupName,\n      groupDescription,\n      userlist,\n      currentBook,\n      currentBenchmark,\n      totalBenchmark,\n      error,\n      isAdmin,\n      showMainPage,\n      updateBook,\n      addUser\n    } = this.state;\n\n    const { userID } = this.props;\n\n    return (\n      <div>\n        <Row>\n          <Col xs='6'>\n            {error && <p>{error.message}</p>}\n            {isAdmin &&\n              <div style={adminpanel}>\n                <GroupNav updatePage={this.updatePage} />\n              </div>\n            }\n            <div style={columnbackground}>\n              {currentBook && (\n                <CurrentBook\n                  currentBook={currentBook}\n                  currentBenchmark={currentBenchmark}\n                  totalBenchmark={totalBenchmark}\n                />\n              )}\n\n              <div>\n                <UserList userlist={userlist} />\n              </div>\n            </div>\n          </Col>\n\n          <Col xs='6'>\n            <div style={groupinfopanel}>\n              <GroupInfo\n                groupName={groupName}\n                groupDescription={groupDescription}\n              />\n            </div>\n\n            {showMainPage && (\n              <Fragment>\n                <ShowAllPosts groupID={groupID} userID={userID} />\n              </Fragment>\n            )}\n\n            {/* </div> */}\n\n            {updateBook && (\n              <Fragment>\n                <UpdateBenchmark\n                  isAdmin={isAdmin}\n                  groupID={groupID}\n                  updatePage={this.updatePage}\n                />\n                <AddBook\n                  groupID={groupID}\n                  isAdmin={isAdmin}\n                  updatePage={this.updatePage}\n                />\n\n              </Fragment>\n            )}\n            {addUser && (\n              <UserSearch\n                groupID={groupID}\n                isAdmin={isAdmin}\n                updatePage={this.updatePage}\n              />\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  };\n};\n\nconst GroupInfo = props => {\n  return (\n    <Fragment>\n      <strong>{props.groupName}</strong>\n\n      <br />\n      <h3>{props.groupDescription}</h3>\n    </Fragment>\n  );\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(GroupPage);\n","import React, { Component } from 'react';\nimport * as Routes from './constants/routes';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { withFirebase } from './componenets/Firebase';\nimport axios from 'axios';\n\n//background\n\n\n// Components\nimport SignUpPage from './componenets/SignUp';\nimport SignInPage from './componenets/SignIn';\nimport NavBar from './componenets/NavBar';\n// import Example from './componenets/SideNav'\nimport Home from './componenets/Home';\nimport PasswordReset from './componenets/PasswordReset';\nimport PasswordChange from './componenets/PasswordChange';\nimport UserProfile from './componenets/UserProfile'\nimport CreateGroup from './componenets/CreateGroup';\nimport GroupPage from './componenets/GroupPage';\n\n//adding a comment hoping it will help merge on github\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: null,\n      currentUser: {}\n    }\n\n  };\n\n  componentDidMount() {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.setState({ authUser });\n        this.isSignedIn(authUser.email);\n      } else {\n        this.setState({ authUser: null, currentUser: {} });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  };\n\n  isSignedIn = async (email) => {\n    const dbResponse = await axios.get(`/api/getuser/${email}`);\n    const currentUser = {\n      username: dbResponse.data.local.username,\n      userID: dbResponse.data._id,\n      grouplist: dbResponse.data.grouplist\n    }\n    this.setState({ currentUser })\n  }\n\n\n  render() {\n\n    const { grouplist } = this.state.currentUser;\n\n    return (\n\n      <BrowserRouter>\n\n        <div>\n\n          <NavBar authUser={this.state.authUser} />\n          {/* Routes to different components */}\n          <Route\n            exact path={Routes.home}\n            render={() =>\n              <Home grouplist={grouplist} />} />\n          <Route\n            path={Routes.signin}\n            render={() =>\n              <SignInPage />}\n          />\n          <Route\n            path={Routes.signup}\n            render={() =>\n              <SignUpPage />}\n          />\n          <Route\n            path={Routes.passwordReset}\n            render={() =>\n              <PasswordReset />}\n          />\n          <Route\n            path={Routes.passwordChange}\n            render={() =>\n              <PasswordChange />}\n          />\n          <Route\n            path={Routes.userProfile}\n            render={() =>\n              <UserProfile />}\n          />\n          <Route\n            path={Routes.createGroup}\n            render={() =>\n              <CreateGroup userID={this.state.currentUser.userID} />}\n          />\n          <Route\n            path={`/group/:groupID`}\n            render={() =>\n              <GroupPage userID={this.state.currentUser.userID} />}\n          />\n          <Route\n            path={`/user/:userID`}\n            render={() =>\n              <UserProfile userID={this.state.currentUser.userID} />}\n          />\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withFirebase(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Firebase, { FirebaseContext } from './componenets/Firebase';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( \n\t<FirebaseContext.Provider value={new Firebase()}>\n\t\t<App />\n\t</FirebaseContext.Provider>,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}